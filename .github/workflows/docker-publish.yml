name: Build and Push Docker Images

on:
  push:
    branches: [ main ]
    paths:
      - 'base/**'
      - 'playwright/**'
      - '.github/workflows/docker-publish.yml'
  pull_request:
    branches: [ main ]
  schedule:
    # Run weekly to get security updates
    - cron: '0 0 * * 0'
  workflow_dispatch:

env:
  REGISTRY: docker.io
  BASE_IMAGE_NAME: ${{ secrets.DOCKERHUB_USERNAME }}/ubuntu-dind
  PLAYWRIGHT_IMAGE_NAME: ${{ secrets.DOCKERHUB_USERNAME }}/playwright-dind

jobs:
  build-base:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract metadata for base image
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.BASE_IMAGE_NAME }}
          tags: |
            type=raw,value=latest
            type=sha,prefix={{branch}}-
            type=ref,event=branch
            type=semver,pattern={{version}}

      - name: Build and push base image
        uses: docker/build-push-action@v5
        with:
          context: ./base
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=registry,ref=${{ env.BASE_IMAGE_NAME }}:buildcache
          cache-to: type=registry,ref=${{ env.BASE_IMAGE_NAME }}:buildcache,mode=max

  build-playwright:
    runs-on: ubuntu-latest
    needs: build-base
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract metadata for Playwright image
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.PLAYWRIGHT_IMAGE_NAME }}
          tags: |
            type=raw,value=latest
            type=sha,prefix={{branch}}-
            type=ref,event=branch
            type=semver,pattern={{version}}

      - name: Build and push Playwright image
        uses: docker/build-push-action@v5
        with:
          context: ./playwright
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            BASE_IMAGE=${{ env.BASE_IMAGE_NAME }}:latest
          cache-from: type=registry,ref=${{ env.PLAYWRIGHT_IMAGE_NAME }}:buildcache
          cache-to: type=registry,ref=${{ env.PLAYWRIGHT_IMAGE_NAME }}:buildcache,mode=max
